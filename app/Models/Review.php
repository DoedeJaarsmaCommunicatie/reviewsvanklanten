<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

/**
 * App\Models\Review
 *
 * @property int $id
 * @property string $name
 * @property string $uuid autogenerated
 * @property int $object_id
 * @property float $score
 * @property string|null $remarks
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property-read \App\Models\Property $property
 * @method static \Illuminate\Database\Eloquent\Builder|Review newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Review newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Review query()
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereObjectId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereRemarks($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereScore($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereUuid($value)
 * @mixin \Eloquent
 * @property int $property_id
 * @method static \Illuminate\Database\Eloquent\Builder|Review wherePropertyId($value)
 * @property int $reviewable_id
 * @property string $reviewable_type
 * @property string $email
 * @property string $status
 * @property-read Model|\Eloquent $reviewable
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereEmail($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereReviewableId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereReviewableType($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Review whereStatus($value)
 */
class Review extends Model
{
    protected $fillable = [
        'name',
        'score',
        'remarks'
    ];

    protected $guarded = [
        'uuid'
    ];

    protected $hidden = [
        'property_id'
    ];

    protected $casts = [
        'score' => 'float'
    ];

    public function reviewable()
    {
        return $this->morphTo();
    }
}
